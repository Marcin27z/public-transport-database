@model TicketRetailSystem.ViewModels.BuyTicketViewModel
@{
    ViewBag.Title = "Buy Ticket";
}

<script>
    var maxTickets = 10, minTickets = 1;

    function validate() {
        setInputFilter(document.getElementById("NumberOfTickets"),
            function(value) {
                integerValue = parseInt(value);
                return /^\d*\.?\d*$/.test(value) && integerValue >= minTickets && integerValue <= maxTickets;
            });
    }

    function setInputFilter(textbox, inputFilter) {
        ["input", "keydown", "keyup", "mousedown", "mouseup", "select", "contextmenu", "drop"].forEach(function(event) {
            textbox.addEventListener(event,
                function() {
                    if (inputFilter(this.value)) {
                        this.oldValue = this.value;
                        this.oldSelectionStart = this.selectionStart;
                        this.oldSelectionEnd = this.selectionEnd;
                    } else if (this.hasOwnProperty("oldValue")) {
                        this.value = this.oldValue;
                        this.setSelectionRange(this.oldSelectionStart, this.oldSelectionEnd);
                    }
                });
        });
    }

    function plus() {
        var element = document.getElementById("NumberOfTickets");
        if (parseInt(element.value) < maxTickets)
            element.value = (parseInt(element.value) + 1).toString(10);
    }

    function minus() {
        var element = document.getElementById("NumberOfTickets");
        if (parseInt(element.value) > minTickets)
            element.value = (parseInt(element.value) - 1).toString(10);
    }
</script>

<h2>Kup bilet</h2>

@using (Html.BeginForm("BuyTicket", "App", FormMethod.Post))
{
    <div class="form-group">
        @Html.LabelFor(m => m.TicketPeriods)
        @Html.DropDownListFor(m => m.TicketType.TicketPeriod, new SelectList(Model.TicketPeriods, "TicketPeriodId", "Description"), new {@class = "form-control"})
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Zones)
        @Html.DropDownListFor(m => m.TicketType.Zone, new SelectList(Model.Zones, "ZoneId", "Description"), new {@class = "form-control"})
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.DiscountTypes)
        @Html.DropDownListFor(m => m.TicketType.DiscountType, new SelectList(Model.DiscountTypes, "DiscountTypeId", "Description"), new {@class = "form-control"})
    </div>

    <div>
        <button class="btn" type="button" onclick="minus()">-</button>
        @Html.TextBoxFor(m => m.NumberOfTickets, new {@class = "form-control", @style = "display: inline; width: 50px; text-align: center;", @Value = "1", @Onfocus = "validate();"})
        <button class="btn" type="button" onclick="plus()">+</button>
    </div>


    foreach (var payment in Model.PaymentTypes)
    {
        <div class="form-check">
            @Html.RadioButtonFor(m => m.PaymentType, payment.PaymentTypeId, new {@class = "form-check-input", @Id = payment.Description})
            <label for="@payment.Description" class="form-check-label">@payment.Description</label>
        </div>
    }
    <button type="submit" class="btn btn-primary"> Buy </button>
}